@page "/tasks"
@attribute [Authorize]

<PageTitle>Tasks</PageTitle>

<MudToolBar>
    <MudIconButton Icon="@Icons.Material.Outlined.Add" OnClick="Add" />
    <MudIconButton Icon="@Icons.Material.Outlined.Refresh" Color="Color.Inherit" OnClick="Refresh" />
    <MudIconButton Icon="@Icons.Material.Filled.CloudDownload" Color="Color.Inherit" OnClick="SyncTasksFromTFS" Title="Sync Tasks with TFS" />
    <MudIconButton Icon="@Icons.Material.Filled.CloudDownload" Color="Color.Inherit" OnClick="SyncTasksFromTrello" Title="Sync Tasks with Trello" />
    @if (_selectedItems.Any())
    {
        <MudIconButton Icon="@Icons.Material.Outlined.Archive" OnClick="Archive">@SharedResource["Archive"]</MudIconButton>
    }
    <MudSpacer />
    <MudText Typo="Typo.button" Class="mx-4" Style="text-wrap: nowrap">Total: @_model.Items?.Count</MudText>
        <MudMenu Icon="@Icons.Material.Filled.MoreVert">
            <MudMenuItem OnClick="@(() => _dense = !_dense)">Dense: @(_dense ? "On" : "Off")</MudMenuItem>
        </MudMenu>
    </MudToolBar>

    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mb-4">
        <MudTable Items="_model.Items" Hover="true" Striped="true" Loading="_loading" Dense="_dense" MultiSelection="true" SortLabel="@SharedResource["Sort By"]" T="IndexViewModel.Item" @bind-SelectedItems="_selectedItems" Style="white-space: nowrap">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Tasks</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>@SharedResource["Has Focus"]</MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<IndexViewModel.Item, object>(x => x.Description)">@SharedResource["Description"]</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<IndexViewModel.Item, object>(x => x.TotalHours)">@SharedResource["Total Hours"]</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<IndexViewModel.Item, object>(x => x.IntegrationType)">@SharedResource["Integration Type"]</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<IndexViewModel.Item, object>(x => x.IntegrationName)">@SharedResource["Integration Name"]</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<IndexViewModel.Item, object>(x => x.ExternalReference)">@SharedResource["External Reference"]</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<IndexViewModel.Item, object>(x => x.CreationDate)" InitialDirection="SortDirection.Descending">@SharedResource["Creation Date"]</MudTableSortLabel></MudTh>
                <MudTh>@SharedResource["Actions"]</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd Style="white-space: nowrap; justify-content: center">
                    <MudText Class="d-flex">
                        @context.HasFocus
                </MudText>
            </MudTd>
            <MudTd DataLabel="@SharedResource["Description"]">@context.Description</MudTd>
            <MudTd DataLabel="@SharedResource["Total Hours"]">@context.TotalHours</MudTd>
            <MudTd DataLabel="@SharedResource["Integration Type"]">@context.IntegrationType</MudTd>
            <MudTd DataLabel="@SharedResource["Integration Name"]">@context.IntegrationName</MudTd>
            <MudTd DataLabel="@SharedResource["External Reference"]">@context.ExternalReference</MudTd>
            <MudTd DataLabel="@SharedResource["Creation Date"]">@context.CreationDate</MudTd>
            <MudTd>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@(() => Details(context.Id))"></MudIconButton>
                @if (context.HasFocus == true)
                {
                    if (context.FlowtimeId != null)
                    {
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Stop" OnClick="@(() => StopFlowtime(context.FlowtimeId.Value))"></MudIconButton>
                    }
                }
                else
                {
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.PlayArrow" OnClick="@(() => FocusWithFlowtime(context.Id))"></MudIconButton>
                }
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudContainer>
