@page "/flows/{Id}"
@using MediatR;
@using Pomodorium.Modules.Flows;
@using Pomodorium.Shared
@using System.DomainModel;
@using System.DomainModel.Storage;
@using System.Collections.ObjectModel;
@using System.Collections.Specialized;
@using System.Reactive.Linq;
@using System.Reactive.Threading.Tasks;
@inject IMediator Mediator
@inject IStringLocalizer<SharedResource> SharedResource;
@inject NavigationManager Navigation;

<PageTitle>Flowtime</PageTitle>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/"><span class="oi oi-home" aria-hidden="true"></span></a></li>
        <li class="breadcrumb-item"><a href="flows">Flows</a></li>
        <li class="breadcrumb-item active" aria-current="page">@SharedResource["New"]</li>
    </ol>
</nav>

<h1>Flowtime</h1>

<div class="card">
    <div class="card-header">
        <ul class="nav nav-tabs card-header-tabs">
            <li class="nav-item">
                <a class="nav-link active" aria-current="true" href="#">
                    @SharedResource["Create New"]
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">Link</a>
            </li>
            <li class="nav-item">
                <a class="nav-link disabled">Disabled</a>
            </li>
        </ul>
    </div>
    <div class="card-body">
        @* <h5 class="card-title">Special title treatment</h5>
        <p class="card-text">With supporting text below as a natural lead-in to additional content.</p> *@

        @if (Model == null)
        {
            <p><em>@SharedResource["Loading"]...</em></p>
        }
        else
        {
            <from>
                @* <div asp-validation-summary="ModelOnly" class="text-danger"></div> *@
                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Id</label>
                    <div class="col-sm-9">
                        <input @bind="Model.Id" class="form-control" disabled />
                        @*<span asp-validation-for="Model.Id" class="text-danger"></span>*@
                    </div>
                </div>
                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">@SharedResource["State"]</label>
                    <div class="col-sm-9">
                        <input @bind="Model.State" class="form-control" disabled />
                        @*<span asp-validation-for="Model.State" class="text-danger"></span>*@
                    </div>
                </div>
                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">@SharedResource["Task"]</label>
                    <div class="col-sm-9">
                        <input @bind="Model.TaskDescription" class="form-control" />
                        @*<span asp-validation-for="Model.TaskDescription" class="text-danger"></span>*@
                    </div>
                </div>
                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">@SharedResource["Start Date Time"]</label>
                    <div class="col-sm-9">
                        <input @bind="Model.StartDateTime" class="form-control" disabled />
                        @*<span asp-validation-for="Model.StartDateTime" class="text-danger"></span>*@
                    </div>
                </div>
                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">@SharedResource["Stop Date Time"]</label>
                    <div class="col-sm-9">
                        <input @bind="Model.StopDateTime" class="form-control" disabled />
                        @*<span asp-validation-for="Model.StopDateTime" class="text-danger"></span>*@
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-sm-9 offset-sm-3">
                        <div class="form-check">
                            <input @bind="Model.Interrupted" class="form-check-input" type="checkbox" id="Interrupted" />
                            <label class="form-check-label" for="Interrupted">@SharedResource["Interrupted?"]</label>
                        </div>
                        @*<span asp-validation-for="Model.Interrupted" class="text-danger"></span>*@
                    </div>
                </div>
                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">@SharedResource["Worktime"]</label>
                    <div class="col-sm-9">
                        <input @bind="Model.Worktime" class="form-control" disabled />
                        @*<span asp-validation-for="Model.Worktime" class="text-danger"></span>*@
                    </div>
                </div>
                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">@SharedResource["Breaktime"]</label>
                    <div class="col-sm-9">
                        <input @bind="Model.Breaktime" class="form-control" />
                        @*<span asp-validation-for="Model.Breaktime" class="text-danger"></span>*@
                    </div>
                </div>
                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Version</label>
                    <div class="col-sm-9">
                        <input @bind="Model.Version" class="form-control" disabled />
                        @*<span asp-validation-for="Model.Version" class="text-danger"></span>*@
                    </div>
                </div>
                <input type="hidden" @bind="Model.Version" />
                <button class="btn btn-primary me-2" @onclick="Save">
                    @* <i class="bi bi-save"></i> *@
                    @SharedResource["Save"]
                </button>
                <button class="btn btn-danger" @onclick="Archive">
                    @* <i class="bi bi-save"></i> *@
                    @SharedResource["Archive"]
                </button>
            </from>
        }
    </div>
</div>

@code {
    [Parameter]
    public string? Id { get; set; }

    public FlowtimeDetails? Model { get; set; }

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        if (Id == null || Id == "new")
        {
            Model = new FlowtimeDetails { };
        }
        else
        {
            var request = new GetFlowtimeRequest { Id = Guid.Parse(Id) };

            var response = await Mediator.Send<GetFlowtimeResponse>(request);

            Model = response.FlowtimeDetails;
        }
    }

    private async System.Threading.Tasks.Task Save()
    {
        if (Id == null || Id == "new")
        {
            var now = DateTime.Now;

            var request = new CreateFlowtimeRequest
                {
                    TaskDescription = Model.TaskDescription
                };

            var response = await Mediator.Send<CreateFlowtimeResponse>(request);
        }
        else
        {
            var now = DateTime.Now;

            var request = new ChangeTaskDescriptionRequest
                {
                    TaskId = Model.TaskId,
                    TaskDescription = Model.TaskDescription,
                    TaskVersion = Model.TaskVersion
                };

            var response = await Mediator.Send<ChangeTaskDescriptionResponse>(request);
        }

        Navigation.NavigateTo("flows");
    }

    private async System.Threading.Tasks.Task Archive()
    {
        if (Id == null || Id == "new")
        {
            return;
        }

        var request = new ArchiveFlowtimeRequest
            {
                Id = Guid.Parse(Id),
                Version = Model.Version
            };

        var response = await Mediator.Send<ArchiveFlowtimeResponse>(request);

        Navigation.NavigateTo("flows");
    }
}
