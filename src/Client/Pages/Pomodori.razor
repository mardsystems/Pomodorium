@page "/pomodori"
@using Pomodorium.Modules.Pomodori;
@using Pomodorium.Shared
@using System.DomainModel;
@using System.DomainModel.EventStore;
@using System.Collections.ObjectModel;
@inject PomodoroQueryDbService PomodoroQueryService;
@inject PomodoroRepository PomodoroRepository;

<PageTitle>Pomodori</PageTitle>

<h1>Pomodori</h1>

<p role="status">Current count: @pomodori.Count</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@if (pomodori == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Date</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pomodoro in pomodori)
            {
                <tr>
                    <td>@pomodoro.Id</td>
                    <td>@pomodoro.StartDateTime.ToShortDateString()</td>
                    <td>@pomodoro.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ObservableCollection<PomodoroQueryItem>? pomodori;

    protected override async Task OnInitializedAsync()
    {
        pomodori = await PomodoroQueryService.QueryPomodori();
    }

    private async Task IncrementCount()
    {
        var id = new PomodoroId(Guid.NewGuid().ToString());

        var now = DateTime.Now;

        var pomodoro = new Pomodoro(id, now, null);

        await PomodoroRepository.Add(pomodoro);
    }
}
